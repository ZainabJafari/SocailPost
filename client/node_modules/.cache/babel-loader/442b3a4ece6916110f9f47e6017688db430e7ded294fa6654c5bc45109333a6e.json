{"ast":null,"code":"// authController.js\nimport { db } from \"../connect.js\";\nimport bcrypt from \"bcryptjs\";\nimport jwt from \"jsonwebtoken\";\nexport const login = (req, res) => {\n  const q = \"SELECT * FROM users WHERE username = ?\";\n  db.query(q, [req.body.username], (err, data) => {\n    if (err) return res.status(500).json({\n      message: \"Database error\"\n    });\n    if (data.length === 0) return res.status(404).json({\n      message: \"User not found\"\n    });\n    const user = data[0];\n    const isPasswordCorrect = bcrypt.compareSync(req.body.password, user.password);\n    if (!isPasswordCorrect) {\n      return res.status(400).json({\n        message: \"Invalid password\"\n      });\n    }\n    const token = jwt.sign({\n      id: user.id\n    }, \"secretkey\");\n    res.cookie(\"accessToken\", token, {\n      httpOnly: true\n    }).status(200).json(user);\n  });\n};","map":{"version":3,"names":["db","bcrypt","jwt","login","req","res","q","query","body","username","err","data","status","json","message","length","user","isPasswordCorrect","compareSync","password","token","sign","id","cookie","httpOnly"],"sources":["C:/Users/zaina/OneDrive/Skrivbord/SocialPost-Project/client/src/context/authContext.js"],"sourcesContent":["// authController.js\r\nimport { db } from \"../connect.js\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nexport const login = (req, res) => {\r\n  const q = \"SELECT * FROM users WHERE username = ?\";\r\n\r\n  db.query(q, [req.body.username], (err, data) => {\r\n    if (err) return res.status(500).json({ message: \"Database error\" });\r\n    if (data.length === 0) return res.status(404).json({ message: \"User not found\" });\r\n\r\n    const user = data[0];\r\n    const isPasswordCorrect = bcrypt.compareSync(req.body.password, user.password);\r\n\r\n    if (!isPasswordCorrect) {\r\n      return res.status(400).json({ message: \"Invalid password\" });\r\n    }\r\n\r\n    const token = jwt.sign({ id: user.id }, \"secretkey\");\r\n    res.cookie(\"accessToken\", token, { httpOnly: true }).status(200).json(user);\r\n  });\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,EAAE,QAAQ,eAAe;AAClC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,GAAG,MAAM,cAAc;AAE9B,OAAO,MAAMC,KAAK,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;EACjC,MAAMC,CAAC,GAAG,wCAAwC;EAElDN,EAAE,CAACO,KAAK,CAACD,CAAC,EAAE,CAACF,GAAG,CAACI,IAAI,CAACC,QAAQ,CAAC,EAAE,CAACC,GAAG,EAAEC,IAAI,KAAK;IAC9C,IAAID,GAAG,EAAE,OAAOL,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAiB,CAAC,CAAC;IACnE,IAAIH,IAAI,CAACI,MAAM,KAAK,CAAC,EAAE,OAAOV,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAiB,CAAC,CAAC;IAEjF,MAAME,IAAI,GAAGL,IAAI,CAAC,CAAC,CAAC;IACpB,MAAMM,iBAAiB,GAAGhB,MAAM,CAACiB,WAAW,CAACd,GAAG,CAACI,IAAI,CAACW,QAAQ,EAAEH,IAAI,CAACG,QAAQ,CAAC;IAE9E,IAAI,CAACF,iBAAiB,EAAE;MACtB,OAAOZ,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAAmB,CAAC,CAAC;IAC9D;IAEA,MAAMM,KAAK,GAAGlB,GAAG,CAACmB,IAAI,CAAC;MAAEC,EAAE,EAAEN,IAAI,CAACM;IAAG,CAAC,EAAE,WAAW,CAAC;IACpDjB,GAAG,CAACkB,MAAM,CAAC,aAAa,EAAEH,KAAK,EAAE;MAAEI,QAAQ,EAAE;IAAK,CAAC,CAAC,CAACZ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACG,IAAI,CAAC;EAC7E,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}