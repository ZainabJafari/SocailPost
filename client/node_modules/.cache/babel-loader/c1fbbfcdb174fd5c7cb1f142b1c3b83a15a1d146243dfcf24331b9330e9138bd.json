{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zaina\\\\OneDrive\\\\Skrivbord\\\\SocialPost-Project\\\\client\\\\src\\\\context\\\\PostsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/PostsContext.js\nimport React, { createContext, useContext, useState } from 'react';\nimport { makeRequest } from '../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsContext = /*#__PURE__*/createContext();\nexport const usePosts = () => {\n  _s();\n  return useContext(PostsContext);\n};\n_s(usePosts, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const PostsProvider = ({\n  children\n}) => {\n  _s2();\n  const [posts, setPosts] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [likes, setLikes] = useState([]);\n  const fetchPosts = async userId => {\n    try {\n      const response = await makeRequest.get('/posts', {\n        params: {\n          userId\n        }\n      });\n      setPosts(response.data);\n    } catch (error) {\n      console.error('Failed to fetch posts', error);\n    }\n  };\n  const createPost = async newPost => {\n    try {\n      const response = await makeRequest.post('/posts', newPost);\n      setPosts(prevPosts => [response.data, ...prevPosts]);\n    } catch (error) {\n      console.error('Failed to create post', error);\n    }\n  };\n  const fetchComments = async postId => {\n    try {\n      const response = await makeRequest.get('/comments', {\n        params: {\n          postId\n        }\n      });\n      setComments(response.data);\n    } catch (error) {}\n  };\n  const createComment = async newComment => {\n    try {\n      const response = await makeRequest.post('/comments', newComment);\n      setComments(prevComments => [response.data, ...prevComments]);\n    } catch (error) {\n      console.error('Failed to create comment', error);\n    }\n  };\n  const fetchLikes = async postId => {\n    try {\n      const response = await makeRequest.get('/likes', {\n        params: {\n          postId\n        }\n      });\n      setLikes(response.data);\n    } catch (error) {}\n  };\n  const addLike = async newComment => {\n    try {\n      const response = await makeRequest.post('/likes', newComment);\n      setLikes(prevLikes => [response.data, ...prevComments]);\n    } catch (error) {\n      console.error('Failed to create comment', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(PostsContext.Provider, {\n    value: {\n      posts,\n      fetchPosts,\n      createPost,\n      createComment,\n      comments,\n      fetchComments,\n      fetchLikes,\n      likes\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s2(PostsProvider, \"0Vj4MZXVKbzWkP4Txw7Av//J5zc=\");\n_c = PostsProvider;\nvar _c;\n$RefreshReg$(_c, \"PostsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","makeRequest","jsxDEV","_jsxDEV","PostsContext","usePosts","_s","PostsProvider","children","_s2","posts","setPosts","comments","setComments","likes","setLikes","fetchPosts","userId","response","get","params","data","error","console","createPost","newPost","post","prevPosts","fetchComments","postId","createComment","newComment","prevComments","fetchLikes","addLike","prevLikes","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/zaina/OneDrive/Skrivbord/SocialPost-Project/client/src/context/PostsContext.js"],"sourcesContent":["// src/context/PostsContext.js\r\nimport React, { createContext, useContext, useState } from 'react';\r\nimport { makeRequest } from '../axios';\r\n\r\nconst PostsContext = createContext();\r\n\r\nexport const usePosts = () => {\r\n  return useContext(PostsContext);\r\n};\r\n\r\nexport const PostsProvider = ({ children }) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [comments, setComments] = useState([]);\r\n  const [likes, setLikes] = useState([]);\r\n  \r\n  const fetchPosts = async (userId) => {\r\n    try {\r\n      const response = await makeRequest.get('/posts', { params: { userId } });\r\n      setPosts(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch posts', error);\r\n    }\r\n  };\r\n\r\n  const createPost = async (newPost) => {\r\n    try {\r\n      const response = await makeRequest.post('/posts', newPost);\r\n      setPosts((prevPosts) => [response.data, ...prevPosts]);\r\n    } catch (error) {\r\n      console.error('Failed to create post', error);\r\n    }\r\n  };\r\n\r\n  const fetchComments = async (postId) => {\r\n    try {\r\n      const response = await makeRequest.get('/comments', { params: { postId } });\r\n      setComments(response.data);\r\n    } catch (error) {\r\n    }\r\n  }; \r\n\r\n  const createComment = async (newComment) => {\r\n    try {\r\n      const response = await makeRequest.post('/comments', newComment);\r\n      setComments((prevComments) => [response.data, ...prevComments]);\r\n    } catch (error) {\r\n      console.error('Failed to create comment', error);\r\n    }\r\n  };\r\n\r\n  const fetchLikes = async (postId) => {\r\n    try {\r\n      const response = await makeRequest.get('/likes', { params: { postId } });\r\n      setLikes(response.data);\r\n    } catch (error) {\r\n    }\r\n  }; \r\n\r\n  const addLike = async (newComment) => {\r\n    try {\r\n      const response = await makeRequest.post('/likes', newComment);\r\n      setLikes((prevLikes) => [response.data, ...prevComments]);\r\n    } catch (error) {\r\n      console.error('Failed to create comment', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PostsContext.Provider value={{ posts, fetchPosts, createPost, createComment, comments, fetchComments, fetchLikes, likes}}>\r\n      {children}\r\n    </PostsContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}