{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zaina\\\\OneDrive\\\\Skrivbord\\\\SocialPost-Project\\\\client\\\\src\\\\components\\\\comments\\\\Comments.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState, useEffect } from \"react\";\nimport \"./comments.scss\";\nimport { AuthContext } from \"../../context/authContext\";\nimport moment from \"moment\";\nimport { usePosts } from \"../../context/PostsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = ({\n  postId\n}) => {\n  _s();\n  const [desc, setDesc] = useState(\"\");\n  const {\n    comments,\n    fetchComments,\n    createComment\n  } = usePosts();\n  useEffect(() => {\n    fetchComments(postId);\n  }, [postId, fetchComments]);\n  const handleClick = async e => {\n    e.preventDefault();\n    await createComment({\n      desc,\n      postId\n    });\n    setDesc(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Write a comment...\",\n        value: desc,\n        onChange: e => setDesc(e.target.value),\n        className: \"comment-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), comments.filter(comment => comment.postId === postId).map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/upload/\" + comment.profilePic,\n        alt: \"Profile\",\n        className: \"comment-profile-pic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"comment-name\",\n        children: comment.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comment-desc\",\n          children: comment.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: moment(comment.createdAt).fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"4MYW0qE86Q4HrBXrH3nEbN1MbUY=\", false, function () {\n  return [usePosts];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useContext","useState","useEffect","AuthContext","moment","usePosts","jsxDEV","_jsxDEV","Comments","postId","_s","desc","setDesc","comments","fetchComments","createComment","handleClick","e","preventDefault","className","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","filter","comment","map","src","profilePic","alt","name","createdAt","fromNow","id","_c","$RefreshReg$"],"sources":["C:/Users/zaina/OneDrive/Skrivbord/SocialPost-Project/client/src/components/comments/Comments.jsx"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\r\nimport \"./comments.scss\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport moment from \"moment\";\r\nimport { usePosts } from \"../../context/PostsContext\";\r\n\r\nconst Comments = ({ postId }) => {\r\n  const [desc, setDesc] = useState(\"\");\r\n  const { comments, fetchComments, createComment } = usePosts();\r\n\r\n  useEffect(() => {\r\n    fetchComments(postId);\r\n  }, [postId, fetchComments]);\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    await createComment({ desc, postId });\r\n    setDesc(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"comments\">\r\n      <div className=\"write\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Write a comment...\"\r\n          value={desc}\r\n          onChange={(e) => setDesc(e.target.value)}\r\n          className=\"comment-input\"\r\n        />\r\n        <button onClick={handleClick} className=\"send-button\">Send</button>\r\n      </div>\r\n      {comments\r\n        .filter((comment) => comment.postId === postId)\r\n        .map((comment) => (\r\n          <div className=\"comment\" key={comment.id}>\r\n            <img src={\"/upload/\" + comment.profilePic} alt=\"Profile\" className=\"comment-profile-pic\"/>\r\n              <span className=\"comment-name\">{comment.name}</span>\r\n            <div className=\"info\">\r\n              <p className=\"comment-desc\">{comment.desc}</p>\r\n            </div>\r\n            <span className=\"date\">{moment(comment.createdAt).fromNow()}</span>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}