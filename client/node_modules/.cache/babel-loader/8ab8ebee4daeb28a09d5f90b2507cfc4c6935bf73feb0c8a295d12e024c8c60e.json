{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zaina\\\\OneDrive\\\\Skrivbord\\\\SocialPost-Project\\\\client\\\\src\\\\components\\\\comments\\\\Comments.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState, useEffect } from \"react\";\nimport \"./comments.scss\";\nimport { AuthContext } from \"../../context/authContext\";\nimport moment from \"moment\";\nimport { usePosts } from \"../../context/PostsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = ({\n  postId\n}) => {\n  _s();\n  const [desc, setDesc] = useState(\"\");\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    comments,\n    fetchComments,\n    createComment\n  } = usePosts();\n  useEffect(() => {\n    fetchComments(postId);\n  }, [postId, fetchComments]);\n  const handleClick = async e => {\n    e.preventDefault();\n    // Skicka med postId när du skapar en kommentar\n    await createComment({\n      desc,\n      postId\n    });\n    setDesc(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/upload/\" + currentUser.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"write a comment\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), comments.filter(comment => comment.postId === postId).map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/upload/\" + comment.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: moment(comment.createdAt).fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"moD7cg+NA6/6P33tvLCdWt25GtM=\", false, function () {\n  return [usePosts];\n});\n_c = Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useContext","useState","useEffect","AuthContext","moment","usePosts","jsxDEV","_jsxDEV","Comments","postId","_s","desc","setDesc","currentUser","comments","fetchComments","createComment","handleClick","e","preventDefault","className","children","src","profilePic","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","filter","comment","map","name","createdAt","fromNow","id","_c","$RefreshReg$"],"sources":["C:/Users/zaina/OneDrive/Skrivbord/SocialPost-Project/client/src/components/comments/Comments.jsx"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\r\nimport \"./comments.scss\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport moment from \"moment\";\r\nimport { usePosts } from \"../../context/PostsContext\";\r\n\r\nconst Comments = ({ postId }) => {\r\n  const [desc, setDesc] = useState(\"\");\r\n  const { currentUser } = useContext(AuthContext);\r\n  const { comments, fetchComments, createComment } = usePosts();\r\n\r\n  useEffect(() => {\r\n    fetchComments(postId);\r\n  }, [postId, fetchComments]);\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    // Skicka med postId när du skapar en kommentar\r\n    await createComment({ desc, postId });\r\n    setDesc(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"comments\">\r\n      <div className=\"write\">\r\n        <img src={\"/upload/\" + currentUser.profilePic} alt=\"\" />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"write a comment\"\r\n          value={desc}\r\n          onChange={(e) => setDesc(e.target.value)}\r\n        />\r\n        <button onClick={handleClick}>Send</button>\r\n      </div>\r\n      {/* Visa endast kommentarer för aktuell postId */}\r\n      {comments\r\n        .filter((comment) => comment.postId === postId)\r\n        .map((comment) => (\r\n          <div className=\"comment\" key={comment.id}>\r\n            <img src={\"/upload/\" + comment.profilePic} alt=\"\" />\r\n            <div className=\"info\">\r\n              <span>{comment.name}</span>\r\n              <p>{comment.desc}</p>\r\n            </div>\r\n            <span className=\"date\">\r\n              {moment(comment.createdAt).fromNow()}\r\n            </span>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}